ttdata<-na.omit(ttdata)
adfbse<-lm(ttdata$bse ~ c(1:length(ttdata$bse))+ttdata$bse.2)
adfsr<-lm(ttdata$sr ~ c(1:length(ttdata$sr))+ttdata$sr.2)
adflr<-lm(ttdata$lr ~ c(1:length(ttdata$lr))+ttdata$lr.2)
adfterm<-lm(ttdata$term ~ c(1:length(ttdata$term))+ttdata$term.2)
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#The results show that the time trend cannot be rejected at the 1% level for the variables - this is necessary as financial time series data
#has been empirically proven to be DS and therefore needs strong evidence otherwise
#STEP 3
adfbse <- ur.df(bselr$bse, type="drift", selectlags="AIC")
adfsr <- ur.df(bselr$sr, type="drift", selectlags="AIC")
adflr <- ur.df(bselr$lr, type="drift", selectlags="AIC")
adfterm <- ur.df(bselr$term, type="drift", selectlags="AIC")
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#Non-stationary for all variables at 5% except for term variable.
#STEP 4
adfbse <- ur.df(bselr$bse, type="none")
adfsr <- ur.df(bselr$sr, type="none")
adflr <- ur.df(bselr$lr, type="none")
adfterm <- ur.df(bselr$term, type="none")
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#It is not possible to reject any of the variables at the 1% level in this situation, therefore it is concluded that, both relevant variables
#bse and term are difference stationary. Individually, the short run and long run yields are difference stationary, which would support
#the spread to being difference stationary as well, even though it showed less evidence of such compared to the two individually.
adfbse <- ur.df(ttdata$bse, type="drift", selectlags="AIC")
adfterm <- ur.df(ttdata$term, type="drift", selectlags="AIC")
#ADF for First difference bse
summary(adfbse)
#ADF for First different term
summary(adfterm)
#Based on the conclusions seen in this test - we can reject the null for a unit root and conclude difference stationarity with an
#integrated order of 1.
#CALCULATING THE RETURNS FOR THE VARIABLES
#Take logs for percentage form
bselr$rbse <- diff(log(bselr$bse))
bselr$rsr <- diff(log(bselr$sr))
bselr$rlr <- diff(log(bselr$lr))
bselr$rterm <- bselr$rlr-bselr$rsr
plot(bselr$rbse, col="red")
lines(bselr$rterm, col="blue")
vardata <- cbind(bselr$rbse, bselr$rsr, bselr$rlr, bselr$rterm)
vardata <- na.omit(vardata)
rm(adfbse,adflr,adfsr,adfterm,Dbse,Dlr,Dsr,Dterm,Lbse,LDbse,LDlr,LDsr,LDterm,Llr,Lsr,Lterm,ttdata)
#So far we have concluded that the original data are I(1), and then I(0) as a result of taking their differences. This makes the returns
#variables suitable for VAR modeling, however before this, it would be worthwhile to check if there exists some cointegrating relationship
#between the the variables, before settling on a model.
#Using a Johansen test
View(bselr)
VARselect(bselr, lag.max=12, type = "both")
install.packages("vars")
library(vars)
View(bselr)
VARselect(bselr, lag.max=12, type = "both")
View(bselr)
View(bselr)
#My analysis is to measure the relationship between the BSE SENSEX index prices and the change in the term structure over
#the ten year period from 01/2010 to 12/2020, the term structure has been computed using the spread between 15-year
#and 1-year bond yields. My intuition is supported by the the fact that as the term structure increases this represents
#a widening in yields, implying that longer term bonds yield more than short term bonds and as such an increase in yield
#is driven by a decrease in their price and vice versa. During times of uncertainty and/or low confidence bond yields should
#drop as investors substitute their equity for safer investments and market forces drive the prices of bonds up and again vice versa
#This analysis will show the relationship (or lack of) between these two variables using VAR methods.
#DATA SOURCES
#https://uk.investing.com/rates-bonds/india-1-year-bond-yield
#https://uk.investing.com/rates-bonds/india-15-year-bond-yield
#PRELIMINARIES
rm(list = ls())
library(zoo)
library(xts)
library(tidyverse)
library(urca)
install.packages("vars")
library(vars)
setwd("C:/Users/Nish/OneDrive - University of Bristol/TB2/Applied Financial Econometrics/Coursework")
bse<-read.csv("S&P BSE SENSEX.csv")
sr<-read.csv("1yr Historical Bond Data India.csv")
lr<-read.csv("15yr Historical Bond Data India.csv")
#DATA PROCESSING/FORMATTING
bse$Close<-as.numeric(as.character(bse$Close))
bse$Date<-as.Date(bse$Date,"%d/%m/%Y")
sr$ï..Date<-as.Date(sr$ï..Date,"%B %d, %Y")
lr$ï..Date<-as.Date(lr$ï..Date,"%B %d, %Y")
#PROCESSING BONDS
data <- merge(sr, lr, join = "right")
data <- data.frame(sr=data$X1yr,
lr=data$X15yr,
Date = data$ï..Date,
year = as.numeric(format(data$ï..Date, format = "%Y")),
month = as.numeric(format(data$ï..Date, format = "%m")),
day = as.numeric(format(data$ï..Date, format = "%d")))
data$ym <- as.yearmon(paste(data$year, data$month), "%Y %m")
sr_xts <- xts(data$sr, data$ym)
lr_xts <-xts(data$lr, data$ym)
sr_xts<-apply.monthly(sr_xts,mean)
lr_xts<-apply.monthly(lr_xts,mean)
bonds_xts <- merge(sr_xts, lr_xts, join = "right")
#PROCESSING INDEX VALUES
data2 <- data.frame(bse=bse$Close,
Date = bse$Date,
year = as.numeric(format(bse$Date, format = "%Y")),
month = as.numeric(format(bse$Date, format = "%m")),
day = as.numeric(format(bse$Date, format = "%d")))
data2$ym <- as.yearmon(paste(data2$year, data2$month), "%Y %m")
data2_xts <- xts(data2$bse, data2$ym)
#TAKING A DAILY AVERAGE FOR EACH MONTH TO CONVERT INTO MONTHLY DATA FOR 10 YEARS
bse_xts<-apply.monthly(data2_xts,mean)
bseND <- merge.xts(bse_xts, bonds_xts,join = "right", fill = NA)
colnames(bseND)[1:3] <-c("bse","sr","lr")
rm(bse_xts,bse,data2,data2_xts,lr_xts,sr_xts,sr,lr,data,bonds_xts)
#THIS FUNCTION TURNS THE SHORT RUN AND LONG RUN YIELDS INTO A SPREAD WHICH CHARACTERISES THE SLOPE OF THE YIELD CURVE.
bseND$term<-bseND$lr-bseND$sr
#SOME BASIC PLOTS
plot(index(bseND),bseND$bse,type="l")
plot(index(bseND),bseND$sr,type="l")
plot(index(bseND),bseND$lr,type="l")
plot(index(bseND),bseND$term,type="l")
#STEP 1
#RUNNING UNIT ROOT TESTS ON THE TREND
adfbse<-ur.df(bseND$bse,type="trend",selectlags="AIC")
adfsr<-ur.df(bseND$sr,type="trend",selectlags="AIC")
adflr<-ur.df(bseND$lr,type="trend",selectlags="AIC")
adfterm<-ur.df(bseND$term,type="trend",selectlags="AIC")
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#Results show that all are non-stationary at the 5% level except term structure, which is stationary at the 5% level.
#STEP 2
#RUNNING A REGRESSION ON THE TREND
Dbse <- na.omit(diff(bseND$bse, differences=1))
Dsr <- na.omit(diff(bseND$sr, differences=1))
Dlr <- na.omit(diff(bseND$lr, differences=1))
Dterm <- na.omit(diff(bseND$term, differences=1))
Lbse <- na.omit(stats::lag(bseND$bse, k=1))
Lsr <- na.omit(stats::lag(bseND$sr, k=1))
Llr <- na.omit(stats::lag(bseND$lr, k=1))
Lterm <- na.omit(stats::lag(bseND$term, k=1))
LDbse <- na.omit(stats::lag(Dbse, k=1))
LDsr <- na.omit(stats::lag(Dsr, k=1))
LDlr <- na.omit(stats::lag(Dlr, k=1))
LDterm <- na.omit(stats::lag(Dterm, k=1))
ttdata<-cbind(Dbse,Dsr,Dlr,Dterm,Lbse,Lsr,Llr,Lterm,LDbse,LDsr,LDlr,LDterm)
ttdata<-na.omit(ttdata)
adfbse<-lm(ttdata$bse ~ c(1:length(ttdata$bse))+ttdata$bse.2)
adfsr<-lm(ttdata$sr ~ c(1:length(ttdata$sr))+ttdata$sr.2)
adflr<-lm(ttdata$lr ~ c(1:length(ttdata$lr))+ttdata$lr.2)
adfterm<-lm(ttdata$term ~ c(1:length(ttdata$term))+ttdata$term.2)
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#The results show that the time trend cannot be rejected at the 1% level for the variables - this is necessary as financial time series data
#has been empirically proven to be DS and therefore needs strong evidence otherwise
#STEP 3
adfbse <- ur.df(bseND$bse, type="drift", selectlags="AIC")
adfsr <- ur.df(bseND$sr, type="drift", selectlags="AIC")
adflr <- ur.df(bseND$lr, type="drift", selectlags="AIC")
adfterm <- ur.df(bseND$term, type="drift", selectlags="AIC")
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#Non-stationary for all variables at 5% except for term variable.
#STEP 4
adfbse <- ur.df(bseND$bse, type="none")
adfsr <- ur.df(bseND$sr, type="none")
adflr <- ur.df(bseND$lr, type="none")
adfterm <- ur.df(bseND$term, type="none")
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#It is not possible to reject any of the variables at the 1% level in this situation, therefore it is concluded that, both relevant variables
#bse and term are difference stationary. Individually, the short run and long run yields are difference stationary, which would support
#the spread to being difference stationary as well, even though it showed less evidence of such compared to the two individually.
adfbse <- ur.df(ttdata$bse, type="drift", selectlags="AIC")
adfterm <- ur.df(ttdata$term, type="drift", selectlags="AIC")
#ADF for First difference bse
summary(adfbse)
#ADF for First different term
summary(adfterm)
#Based on the conclusions seen in this test - we can reject the null for a unit root and conclude difference stationarity with an
#integrated order of 1.
#CALCULATING THE RETURNS FOR THE VARIABLES
#Take logs for percentage form
bseND$rbse <- diff(log(bseND$bse))
bseND$rsr <- diff(log(bseND$sr))
bseND$rlr <- diff(log(bseND$lr))
bseND$rterm <- bseND$rlr-bseND$rsr
plot(bseND$rbse, col="red")
lines(bseND$rterm, col="blue")
vardata <- cbind(bseND$rbse, bseND$rsr, bseND$rlr, bseND$rterm)
vardata <- na.omit(vardata)
rm(adfbse,adflr,adfsr,adfterm,Dbse,Dlr,Dsr,Dterm,Lbse,LDbse,LDlr,LDsr,LDterm,Llr,Lsr,Lterm,ttdata)
install.packages("vars")
View(bseND)
rm(list = ls())
library(zoo)
library(xts)
library(tidyverse)
library(urca)
library(vars)
setwd("C:/Users/Nish/OneDrive - University of Bristol/TB2/Applied Financial Econometrics/Coursework")
bse<-read.csv("S&P BSE SENSEX.csv")
sr<-read.csv("1yr Historical Bond Data India.csv")
lr<-read.csv("15yr Historical Bond Data India.csv")
#DATA PROCESSING/FORMATTING
bse$Close<-as.numeric(as.character(bse$Close))
bse$Date<-as.Date(bse$Date,"%d/%m/%Y")
sr$ï..Date<-as.Date(sr$ï..Date,"%B %d, %Y")
lr$ï..Date<-as.Date(lr$ï..Date,"%B %d, %Y")
#PROCESSING BONDS
data <- merge(sr, lr, join = "right")
data <- data.frame(sr=data$X1yr,
lr=data$X15yr,
Date = data$ï..Date,
year = as.numeric(format(data$ï..Date, format = "%Y")),
month = as.numeric(format(data$ï..Date, format = "%m")),
day = as.numeric(format(data$ï..Date, format = "%d")))
data$ym <- as.yearmon(paste(data$year, data$month), "%Y %m")
sr_xts <- xts(data$sr, data$ym)
lr_xts <-xts(data$lr, data$ym)
sr_xts<-apply.monthly(sr_xts,mean)
lr_xts<-apply.monthly(lr_xts,mean)
bonds_xts <- merge(sr_xts, lr_xts, join = "right")
#PROCESSING INDEX VALUES
data2 <- data.frame(bse=bse$Close,
Date = bse$Date,
year = as.numeric(format(bse$Date, format = "%Y")),
month = as.numeric(format(bse$Date, format = "%m")),
day = as.numeric(format(bse$Date, format = "%d")))
data2$ym <- as.yearmon(paste(data2$year, data2$month), "%Y %m")
data2_xts <- xts(data2$bse, data2$ym)
#TAKING A DAILY AVERAGE FOR EACH MONTH TO CONVERT INTO MONTHLY DATA FOR 10 YEARS
bse_xts<-apply.monthly(data2_xts,mean)
bseND <- merge.xts(bse_xts, bonds_xts,join = "right", fill = NA)
colnames(bseND)[1:3] <-c("bse","sr","lr")
rm(bse_xts,bse,data2,data2_xts,lr_xts,sr_xts,sr,lr,data,bonds_xts)
#THIS FUNCTION TURNS THE SHORT RUN AND LONG RUN YIELDS INTO A SPREAD WHICH CHARACTERISES THE SLOPE OF THE YIELD CURVE.
bseND$term<-bseND$lr-bseND$sr
#SOME BASIC PLOTS
plot(index(bseND),bseND$bse,type="l")
plot(index(bseND),bseND$sr,type="l")
plot(index(bseND),bseND$lr,type="l")
plot(index(bseND),bseND$term,type="l")
#STEP 1
#RUNNING UNIT ROOT TESTS ON THE TREND
adfbse<-ur.df(bseND$bse,type="trend",selectlags="AIC")
adfsr<-ur.df(bseND$sr,type="trend",selectlags="AIC")
adflr<-ur.df(bseND$lr,type="trend",selectlags="AIC")
adfterm<-ur.df(bseND$term,type="trend",selectlags="AIC")
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#Results show that all are non-stationary at the 5% level except term structure, which is stationary at the 5% level.
#STEP 2
#RUNNING A REGRESSION ON THE TREND
Dbse <- na.omit(diff(bseND$bse, differences=1))
Dsr <- na.omit(diff(bseND$sr, differences=1))
Dlr <- na.omit(diff(bseND$lr, differences=1))
Dterm <- na.omit(diff(bseND$term, differences=1))
Lbse <- na.omit(stats::lag(bseND$bse, k=1))
Lsr <- na.omit(stats::lag(bseND$sr, k=1))
Llr <- na.omit(stats::lag(bseND$lr, k=1))
Lterm <- na.omit(stats::lag(bseND$term, k=1))
LDbse <- na.omit(stats::lag(Dbse, k=1))
LDsr <- na.omit(stats::lag(Dsr, k=1))
LDlr <- na.omit(stats::lag(Dlr, k=1))
LDterm <- na.omit(stats::lag(Dterm, k=1))
ttdata<-cbind(Dbse,Dsr,Dlr,Dterm,Lbse,Lsr,Llr,Lterm,LDbse,LDsr,LDlr,LDterm)
ttdata<-na.omit(ttdata)
adfbse<-lm(ttdata$bse ~ c(1:length(ttdata$bse))+ttdata$bse.2)
adfsr<-lm(ttdata$sr ~ c(1:length(ttdata$sr))+ttdata$sr.2)
adflr<-lm(ttdata$lr ~ c(1:length(ttdata$lr))+ttdata$lr.2)
adfterm<-lm(ttdata$term ~ c(1:length(ttdata$term))+ttdata$term.2)
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#The results show that the time trend cannot be rejected at the 1% level for the variables - this is necessary as financial time series data
#has been empirically proven to be DS and therefore needs strong evidence otherwise
#STEP 3
adfbse <- ur.df(bseND$bse, type="drift", selectlags="AIC")
adfsr <- ur.df(bseND$sr, type="drift", selectlags="AIC")
adflr <- ur.df(bseND$lr, type="drift", selectlags="AIC")
adfterm <- ur.df(bseND$term, type="drift", selectlags="AIC")
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#Non-stationary for all variables at 5% except for term variable.
#STEP 4
adfbse <- ur.df(bseND$bse, type="none")
adfsr <- ur.df(bseND$sr, type="none")
adflr <- ur.df(bseND$lr, type="none")
adfterm <- ur.df(bseND$term, type="none")
#ADF for bse
summary(adfbse)
#ADF for sr
summary(adfsr)
#ADF for lr
summary(adflr)
#ADF for term
summary(adfterm)
#It is not possible to reject any of the variables at the 1% level in this situation, therefore it is concluded that, both relevant variables
#bse and term are difference stationary. Individually, the short run and long run yields are difference stationary, which would support
#the spread to being difference stationary as well, even though it showed less evidence of such compared to the two individually.
adfbse <- ur.df(ttdata$bse, type="drift", selectlags="AIC")
adfterm <- ur.df(ttdata$term, type="drift", selectlags="AIC")
#ADF for First difference bse
summary(adfbse)
#ADF for First different term
summary(adfterm)
#Based on the conclusions seen in this test - we can reject the null for a unit root and conclude difference stationarity with an
#integrated order of 1.
#CALCULATING THE RETURNS FOR THE VARIABLES
#Take logs for percentage form
bseND$rbse <- diff(log(bseND$bse))
bseND$rsr <- diff(log(bseND$sr))
bseND$rlr <- diff(log(bseND$lr))
bseND$rterm <- bseND$rlr-bseND$rsr
plot(bseND$rbse, col="red")
lines(bseND$rterm, col="blue")
vardata <- cbind(bseND$rbse, bseND$rsr, bseND$rlr, bseND$rterm)
vardata <- na.omit(vardata)
rm(adfbse,adflr,adfsr,adfterm,Dbse,Dlr,Dsr,Dterm,Lbse,LDbse,LDlr,LDsr,LDterm,Llr,Lsr,Lterm,ttdata)
View(bseND)
View(bseND)
?cbind
KeyVars <- cbind(bseND$bse,bseND$term)
View(KeyVars)
#So far we have concluded that the original data are I(1), and then I(0) as a result of taking their differences. This makes the returns
#variables suitable for VAR modeling, however before this, it would be worthwhile to check if there exists some cointegrating relationship
#between the the variables, before settling on a model.
#Using a Johansen test
VARselect(KeyVars, lag.max=12, type = "both")
VARselect(KeyVars, lag.max=15, type = "both")
#The number of lags that minimizes the AIC using the VARselect method is 2
VARselect(KeyVars, lag.max=20, type = "both")
#The number of lags that minimizes the AIC using the VARselect method is 2
VARselect(KeyVars, lag.max=24, type = "both")
#The number of lags that minimizes the AIC using the VARselect method is 2
VARselect(KeyVars, lag.max=24, type = "trend")
#The number of lags that minimizes the AIC using the VARselect method is 2, using a maximum lag of 24 months.
VARselect(KeyVars, lag.max=24, type = "constant")
#The number of lags that minimizes the AIC using the VARselect method is 2, using a maximum lag of 24 months.
VARselect(KeyVars, lag.max=24, type = "const")
#The number of lags that minimizes the AIC using the VARselect method is 2, using a maximum lag of 24 months.
VARselect(KeyVars, lag.max=24, type = "none")
#The Johansen test can take 2 forms, one being trace test and maximal eigenvalue.
#Trace test
JtestTrace <- ca.jo(KeyVars, type = "trace", ecdet = "none", K = 2, spec = "transitory")
summary (JtestTrace)
JtestTrace <- ca.jo(KeyVars, type = "trace", ecdet = "const", K = 2, spec = "transitory")
summary (JtestTrace)
JtestTrace <- ca.jo(KeyVars, type = "trace", ecdet = "trend", K = 2, spec = "transitory")
summary (JtestTrace)
#Maximal eigenvalue
Jtesteigen <- ca.jo(data, type = "eigen", ecdet = "none", K = 2, spec = "transitory")
summary (Jtesteigen)
Jtesteigen <- ca.jo(data, type = "eigen", ecdet = "none", K = 2, spec = "transitory")
summary (Jtesteigen)
Jtesteigen <- ca.jo(KeyVars, type = "eigen", ecdet = "none", K = 2, spec = "transitory")
summary (Jtesteigen)
rm(JtestTrace,Jtesteigen)
Step1 <- lm(KeyVars$bse ~ KeyVars$term + c(1:length(KeyVars$bse)))
summary(Step1)
res <- Step1$residuals
ADFres <- ur.df(res, type="none", selectlags="AIC")
summary(ADFres)
View(bseND)
Step2 <- lm(bseND$rbse ~ bseND$rterm + lag(bseND$rterm) + lag(bseND$rbse)+
lag(bseND$rterm, k=2) + lag(bseND$rbse, k=2)+
lag(bseND$rterm, k=3) + lag(bseND$rbse, k=3)+ lag(res))
summary (Step2)
AIC(Step2)
View(bseND)
View(bseND)
rbseND <- cbind(bseND$rbse,bseND$rsr,bseND$rlr,bseND$rterm)
View(rbseND)
rbseND <- na.omit(cbind(bseND$rbse,bseND$rsr,bseND$rlr,bseND$rterm))
View(rbseND)
Step2 <- lm(rbseND$rLR ˜ rbseND$rSR + lag(rbseND$rSR) + lag(rbseND$rLR)+
lag(rbseND$rSR, k=2) + lag(rbseND$rLR, k=2)+
lag(rbseND$rSR, k=3) + lag(rbseND$rLR, k=3)+ lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rLR ~ rbseND$rSR + lag(rbseND$rSR) + lag(rbseND$rLR)+
lag(rbseND$rSR, k=2) + lag(rbseND$rLR, k=2)+
lag(rbseND$rSR, k=3) + lag(rbseND$rLR, k=3)+ lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rLR ~ rbseND$rSR + lag(rbseND$rSR) + lag(rbseND$rLR)+
lag(rbseND$rSR, k=2) + lag(rbseND$rLR, k=2)+
lag(rbseND$rSR, k=3) + lag(rbseND$rLR, k=3)+ lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + lag(rbseND$rterm) + lag(rbseND$rbse)+
lag(rbseND$rterm, k=2) + lag(rbseND$rbse, k=2)+
lag(rbseND$rterm, k=3) + lag(rbseND$rbse, k=3)+ lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + lag(rbseND$rterm) + lag(rbseND$rbse)+
lag(rbseND$rterm, k=2) + lag(rbseND$rbse, k=2)+
lag(rbseND$rterm, k=3) + lag(rbseND$rbse, k=3)+ lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + lag(rbseND$rterm) + lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+
stats::lag(rbseND$rterm, k=3) + stats::lag(rbseND$rbse, k=3)+ stats::lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + lag(rbseND$rterm) + lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+
stats::lag(rbseND$rterm, k=3) + stats::lag(rbseND$rbse, k=3)+ stats::lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + lag(rbseND$rterm) + lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+
stats::lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + lag(rbseND$rterm) + lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+
stats::lag(rbseND$rterm, k=3) + stats::lag(rbseND$rbse, k=3)+ lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + stats::lag(rbseND$rterm) + stats::lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + stats::lag(rbseND$rterm) + stats::lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+stats::lag(Step1$residuals))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + stats::lag(rbseND$rterm) + stats::lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+stats::lag(Step1$residuals))
summary (Step2)
AIC(Step2)
View(Step1)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + stats::lag(rbseND$rterm) + stats::lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+stats::lag(res))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + stats::lag(rbseND$rterm) + stats::lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+stats::lag(res))
View(res)
lagres <- stats::lag(res)
View(lagres)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + stats::lag(rbseND$rterm) + stats::lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + na.omit(stats::lag(rbseND$rbse, k=2)+stats::lag(res)))
summary (Step2)
AIC(Step2)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + stats::lag(rbseND$rterm) + stats::lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + na.omit(stats::lag(rbseND$rbse, k=2)+stats::lag(res)))
lagres <- na.omit(stats::lag(res))
View(lagres)
View(res)
Step2 <- lm(rbseND$rbse ~ rbseND$rterm + stats::lag(rbseND$rterm) + stats::lag(rbseND$rbse)+
stats::lag(rbseND$rterm, k=2) + stats::lag(rbseND$rbse, k=2)+ na.omit(stats::lag(res)))
summary (Step2)
AIC(Step2)
